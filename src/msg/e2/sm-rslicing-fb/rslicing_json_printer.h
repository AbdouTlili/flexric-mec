#ifndef RSLICING_JSON_PRINTER_H
#define RSLICING_JSON_PRINTER_H

/* Generated by flatcc 0.6.1-dev FlatBuffers schema compiler for C by dvide.com */

#include "flatcc/flatcc_json_printer.h"
#include "flatcc/flatcc_prologue.h"

static void mac_rslicing_StaticSlice_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td);
static void mac_rslicing_NvsRate_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td);
static void mac_rslicing_NvsCapacity_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td);
static void mac_rslicing_NvsSliceConfig_print_json_union_type(flatcc_json_printer_t *ctx, flatbuffers_utype_t type);
static void mac_rslicing_NvsSliceConfig_print_json_union(flatcc_json_printer_t *ctx, flatcc_json_printer_union_descriptor_t *ud);
static void mac_rslicing_NvsSlice_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td);
static void mac_rslicing_Scn19OnDemand_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td);
static void mac_rslicing_Scn19SliceConfig_print_json_union_type(flatcc_json_printer_t *ctx, flatbuffers_utype_t type);
static void mac_rslicing_Scn19SliceConfig_print_json_union(flatcc_json_printer_t *ctx, flatcc_json_printer_union_descriptor_t *ud);
static void mac_rslicing_Scn19Slice_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td);
static void mac_rslicing_EdfSlice_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td);
static void mac_rslicing_SliceParams_print_json_union_type(flatcc_json_printer_t *ctx, flatbuffers_utype_t type);
static void mac_rslicing_SliceParams_print_json_union(flatcc_json_printer_t *ctx, flatcc_json_printer_union_descriptor_t *ud);
static void mac_rslicing_Slice_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td);
static void mac_rslicing_UlDlSliceConfig_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td);
static void mac_rslicing_SliceConfig_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td);
static void mac_rslicing_UeSliceAssoc_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td);
static void mac_rslicing_UeSliceConfig_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td);
static void mac_rslicing_DelSliceConfig_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td);
static void mac_rslicing_EventTrigger_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td);
static void mac_rslicing_IndicationHeader_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td);
static void mac_rslicing_IndicationMessage_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td);
static void mac_rslicing_ControlHeader_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td);
static void mac_rslicing_AddModSliceCommand_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td);
static void mac_rslicing_DelSliceCommand_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td);
static void mac_rslicing_UeSliceAssocCommand_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td);
static void mac_rslicing_ControlCommand_print_json_union_type(flatcc_json_printer_t *ctx, flatbuffers_utype_t type);
static void mac_rslicing_ControlCommand_print_json_union(flatcc_json_printer_t *ctx, flatcc_json_printer_union_descriptor_t *ud);
static void mac_rslicing_ControlMessage_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td);
static void mac_rslicing_ControlOutcome_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td);
static void mac_rslicing_CallProcessId_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td);
static void mac_rslicing_SupportedAlgorithm_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td);
static void mac_rslicing_RanFunctionDefinition_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td);

static void mac_rslicing_SliceAlgorithm_print_json_enum(flatcc_json_printer_t *ctx, uint8_t v)
{

    switch (v) {
    case 0: flatcc_json_printer_enum(ctx, "None", 4); break;
    case 1: flatcc_json_printer_enum(ctx, "Static", 6); break;
    case 2: flatcc_json_printer_enum(ctx, "NVS", 3); break;
    case 3: flatcc_json_printer_enum(ctx, "SCN19", 5); break;
    case 4: flatcc_json_printer_enum(ctx, "EDF", 3); break;
    default: flatcc_json_printer_uint8(ctx, v); break;
    }
}

static void mac_rslicing_ReportOccasion_print_json_enum(flatcc_json_printer_t *ctx, uint8_t v)
{

    switch (v) {
    case 0: flatcc_json_printer_enum(ctx, "onChange", 8); break;
    default: flatcc_json_printer_uint8(ctx, v); break;
    }
}

static void mac_rslicing_NvsSliceConfig_print_json_union_type(flatcc_json_printer_t *ctx, flatbuffers_utype_t type)
{
    switch (type) {
    case 1:
        flatcc_json_printer_enum(ctx, "rate", 4);
        break;
    case 2:
        flatcc_json_printer_enum(ctx, "capacity", 8);
        break;
    default:
        flatcc_json_printer_enum(ctx, "NONE", 4);
        break;
    }
}

static void mac_rslicing_NvsSliceConfig_print_json_union(flatcc_json_printer_t *ctx, flatcc_json_printer_union_descriptor_t *ud)
{
    switch (ud->type) {
    case 1:
        flatcc_json_printer_union_table(ctx, ud, mac_rslicing_NvsRate_print_json_table);
        break;
    case 2:
        flatcc_json_printer_union_table(ctx, ud, mac_rslicing_NvsCapacity_print_json_table);
        break;
    default:
        break;
    }
}

static void mac_rslicing_Scn19SliceConfig_print_json_union_type(flatcc_json_printer_t *ctx, flatbuffers_utype_t type)
{
    switch (type) {
    case 1:
        flatcc_json_printer_enum(ctx, "dynamic", 7);
        break;
    case 2:
        flatcc_json_printer_enum(ctx, "fixed", 5);
        break;
    case 3:
        flatcc_json_printer_enum(ctx, "ondemand", 8);
        break;
    default:
        flatcc_json_printer_enum(ctx, "NONE", 4);
        break;
    }
}

static void mac_rslicing_Scn19SliceConfig_print_json_union(flatcc_json_printer_t *ctx, flatcc_json_printer_union_descriptor_t *ud)
{
    switch (ud->type) {
    case 1:
        flatcc_json_printer_union_table(ctx, ud, mac_rslicing_NvsRate_print_json_table);
        break;
    case 2:
        flatcc_json_printer_union_table(ctx, ud, mac_rslicing_StaticSlice_print_json_table);
        break;
    case 3:
        flatcc_json_printer_union_table(ctx, ud, mac_rslicing_Scn19OnDemand_print_json_table);
        break;
    default:
        break;
    }
}

static void mac_rslicing_SliceParams_print_json_union_type(flatcc_json_printer_t *ctx, flatbuffers_utype_t type)
{
    switch (type) {
    case 1:
        flatcc_json_printer_enum(ctx, "static", 6);
        break;
    case 2:
        flatcc_json_printer_enum(ctx, "nvs", 3);
        break;
    case 3:
        flatcc_json_printer_enum(ctx, "scn19", 5);
        break;
    case 4:
        flatcc_json_printer_enum(ctx, "edf", 3);
        break;
    default:
        flatcc_json_printer_enum(ctx, "NONE", 4);
        break;
    }
}

static void mac_rslicing_SliceParams_print_json_union(flatcc_json_printer_t *ctx, flatcc_json_printer_union_descriptor_t *ud)
{
    switch (ud->type) {
    case 1:
        flatcc_json_printer_union_table(ctx, ud, mac_rslicing_StaticSlice_print_json_table);
        break;
    case 2:
        flatcc_json_printer_union_table(ctx, ud, mac_rslicing_NvsSlice_print_json_table);
        break;
    case 3:
        flatcc_json_printer_union_table(ctx, ud, mac_rslicing_Scn19Slice_print_json_table);
        break;
    case 4:
        flatcc_json_printer_union_table(ctx, ud, mac_rslicing_EdfSlice_print_json_table);
        break;
    default:
        break;
    }
}

static void mac_rslicing_ControlCommand_print_json_union_type(flatcc_json_printer_t *ctx, flatbuffers_utype_t type)
{
    switch (type) {
    case 1:
        flatcc_json_printer_enum(ctx, "addModSlice", 11);
        break;
    case 2:
        flatcc_json_printer_enum(ctx, "delSlice", 8);
        break;
    case 3:
        flatcc_json_printer_enum(ctx, "ueSliceAssoc", 12);
        break;
    default:
        flatcc_json_printer_enum(ctx, "NONE", 4);
        break;
    }
}

static void mac_rslicing_ControlCommand_print_json_union(flatcc_json_printer_t *ctx, flatcc_json_printer_union_descriptor_t *ud)
{
    switch (ud->type) {
    case 1:
        flatcc_json_printer_union_table(ctx, ud, mac_rslicing_AddModSliceCommand_print_json_table);
        break;
    case 2:
        flatcc_json_printer_union_table(ctx, ud, mac_rslicing_DelSliceCommand_print_json_table);
        break;
    case 3:
        flatcc_json_printer_union_table(ctx, ud, mac_rslicing_UeSliceAssocCommand_print_json_table);
        break;
    default:
        break;
    }
}

static void mac_rslicing_StaticSlice_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td)
{
    flatcc_json_printer_uint32_field(ctx, td, 0, "posLow", 6, 0);
    flatcc_json_printer_uint32_field(ctx, td, 1, "posHigh", 7, 0);
}

static inline int mac_rslicing_StaticSlice_print_json_as_root(flatcc_json_printer_t *ctx, const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_json_printer_table_as_root(ctx, buf, bufsiz, fid, mac_rslicing_StaticSlice_print_json_table);
}

static void mac_rslicing_NvsRate_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td)
{
    flatcc_json_printer_float_field(ctx, td, 0, "mbpsRequired", 12, 0.000000);
    flatcc_json_printer_float_field(ctx, td, 1, "mbpsReference", 13, 0.000000);
}

static inline int mac_rslicing_NvsRate_print_json_as_root(flatcc_json_printer_t *ctx, const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_json_printer_table_as_root(ctx, buf, bufsiz, fid, mac_rslicing_NvsRate_print_json_table);
}

static void mac_rslicing_NvsCapacity_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td)
{
    flatcc_json_printer_float_field(ctx, td, 0, "pctReserved", 11, 0.000000);
}

static inline int mac_rslicing_NvsCapacity_print_json_as_root(flatcc_json_printer_t *ctx, const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_json_printer_table_as_root(ctx, buf, bufsiz, fid, mac_rslicing_NvsCapacity_print_json_table);
}

static void mac_rslicing_NvsSlice_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td)
{
    flatcc_json_printer_union_field(ctx, td, 1, "config", 6, mac_rslicing_NvsSliceConfig_print_json_union_type, mac_rslicing_NvsSliceConfig_print_json_union);
}

static inline int mac_rslicing_NvsSlice_print_json_as_root(flatcc_json_printer_t *ctx, const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_json_printer_table_as_root(ctx, buf, bufsiz, fid, mac_rslicing_NvsSlice_print_json_table);
}

static void mac_rslicing_Scn19OnDemand_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td)
{
    flatcc_json_printer_float_field(ctx, td, 0, "pctReserved", 11, 0.000000);
    flatcc_json_printer_uint32_field(ctx, td, 1, "tau", 3, 0);
    flatcc_json_printer_float_field(ctx, td, 2, "logDelta", 8, 0.000000);
}

static inline int mac_rslicing_Scn19OnDemand_print_json_as_root(flatcc_json_printer_t *ctx, const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_json_printer_table_as_root(ctx, buf, bufsiz, fid, mac_rslicing_Scn19OnDemand_print_json_table);
}

static void mac_rslicing_Scn19Slice_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td)
{
    flatcc_json_printer_union_field(ctx, td, 1, "config", 6, mac_rslicing_Scn19SliceConfig_print_json_union_type, mac_rslicing_Scn19SliceConfig_print_json_union);
}

static inline int mac_rslicing_Scn19Slice_print_json_as_root(flatcc_json_printer_t *ctx, const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_json_printer_table_as_root(ctx, buf, bufsiz, fid, mac_rslicing_Scn19Slice_print_json_table);
}

static void mac_rslicing_EdfSlice_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td)
{
    flatcc_json_printer_uint32_field(ctx, td, 0, "deadline", 8, 0);
    flatcc_json_printer_uint32_field(ctx, td, 1, "guaranteedPrbs", 14, 0);
    flatcc_json_printer_uint32_field(ctx, td, 2, "maxReplenish", 12, 0);
    flatcc_json_printer_uint32_vector_field(ctx, td, 3, "override", 8);
}

static inline int mac_rslicing_EdfSlice_print_json_as_root(flatcc_json_printer_t *ctx, const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_json_printer_table_as_root(ctx, buf, bufsiz, fid, mac_rslicing_EdfSlice_print_json_table);
}

static void mac_rslicing_Slice_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td)
{
    flatcc_json_printer_uint32_field(ctx, td, 0, "id", 2, 0);
    flatcc_json_printer_string_field(ctx, td, 1, "label", 5);
    flatcc_json_printer_string_field(ctx, td, 2, "scheduler", 9);
    flatcc_json_printer_union_field(ctx, td, 4, "params", 6, mac_rslicing_SliceParams_print_json_union_type, mac_rslicing_SliceParams_print_json_union);
}

static inline int mac_rslicing_Slice_print_json_as_root(flatcc_json_printer_t *ctx, const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_json_printer_table_as_root(ctx, buf, bufsiz, fid, mac_rslicing_Slice_print_json_table);
}

static void mac_rslicing_UlDlSliceConfig_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td)
{
    flatcc_json_printer_uint8_enum_field(ctx, td, 0, "algorithm", 9, 0, mac_rslicing_SliceAlgorithm_print_json_enum);
    flatcc_json_printer_table_vector_field(ctx, td, 1, "slices", 6, mac_rslicing_Slice_print_json_table);
    flatcc_json_printer_string_field(ctx, td, 2, "scheduler", 9);
}

static inline int mac_rslicing_UlDlSliceConfig_print_json_as_root(flatcc_json_printer_t *ctx, const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_json_printer_table_as_root(ctx, buf, bufsiz, fid, mac_rslicing_UlDlSliceConfig_print_json_table);
}

static void mac_rslicing_SliceConfig_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td)
{
    flatcc_json_printer_table_field(ctx, td, 0, "dl", 2, mac_rslicing_UlDlSliceConfig_print_json_table);
    flatcc_json_printer_table_field(ctx, td, 1, "ul", 2, mac_rslicing_UlDlSliceConfig_print_json_table);
}

static inline int mac_rslicing_SliceConfig_print_json_as_root(flatcc_json_printer_t *ctx, const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_json_printer_table_as_root(ctx, buf, bufsiz, fid, mac_rslicing_SliceConfig_print_json_table);
}

static void mac_rslicing_UeSliceAssoc_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td)
{
    flatcc_json_printer_uint16_field(ctx, td, 0, "rnti", 4, 0);
    flatcc_json_printer_uint32_field(ctx, td, 1, "dlId", 4, 0);
    flatcc_json_printer_uint32_field(ctx, td, 2, "ulId", 4, 0);
}

static inline int mac_rslicing_UeSliceAssoc_print_json_as_root(flatcc_json_printer_t *ctx, const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_json_printer_table_as_root(ctx, buf, bufsiz, fid, mac_rslicing_UeSliceAssoc_print_json_table);
}

static void mac_rslicing_UeSliceConfig_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td)
{
    flatcc_json_printer_table_vector_field(ctx, td, 0, "ues", 3, mac_rslicing_UeSliceAssoc_print_json_table);
}

static inline int mac_rslicing_UeSliceConfig_print_json_as_root(flatcc_json_printer_t *ctx, const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_json_printer_table_as_root(ctx, buf, bufsiz, fid, mac_rslicing_UeSliceConfig_print_json_table);
}

static void mac_rslicing_DelSliceConfig_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td)
{
    flatcc_json_printer_uint32_vector_field(ctx, td, 0, "dl", 2);
    flatcc_json_printer_uint32_vector_field(ctx, td, 1, "ul", 2);
}

static inline int mac_rslicing_DelSliceConfig_print_json_as_root(flatcc_json_printer_t *ctx, const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_json_printer_table_as_root(ctx, buf, bufsiz, fid, mac_rslicing_DelSliceConfig_print_json_table);
}

static void mac_rslicing_EventTrigger_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td)
{
    flatcc_json_printer_uint8_enum_field(ctx, td, 0, "reportOccasion", 14, 0, mac_rslicing_ReportOccasion_print_json_enum);
}

static inline int mac_rslicing_EventTrigger_print_json_as_root(flatcc_json_printer_t *ctx, const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_json_printer_table_as_root(ctx, buf, bufsiz, fid, mac_rslicing_EventTrigger_print_json_table);
}

static void mac_rslicing_IndicationHeader_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td)
{
}

static inline int mac_rslicing_IndicationHeader_print_json_as_root(flatcc_json_printer_t *ctx, const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_json_printer_table_as_root(ctx, buf, bufsiz, fid, mac_rslicing_IndicationHeader_print_json_table);
}

static void mac_rslicing_IndicationMessage_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td)
{
    flatcc_json_printer_table_field(ctx, td, 0, "sliceConfig", 11, mac_rslicing_SliceConfig_print_json_table);
    flatcc_json_printer_table_field(ctx, td, 1, "ueSliceConfig", 13, mac_rslicing_UeSliceConfig_print_json_table);
}

static inline int mac_rslicing_IndicationMessage_print_json_as_root(flatcc_json_printer_t *ctx, const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_json_printer_table_as_root(ctx, buf, bufsiz, fid, mac_rslicing_IndicationMessage_print_json_table);
}

static void mac_rslicing_ControlHeader_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td)
{
}

static inline int mac_rslicing_ControlHeader_print_json_as_root(flatcc_json_printer_t *ctx, const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_json_printer_table_as_root(ctx, buf, bufsiz, fid, mac_rslicing_ControlHeader_print_json_table);
}

static void mac_rslicing_AddModSliceCommand_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td)
{
    flatcc_json_printer_table_field(ctx, td, 0, "sliceConfig", 11, mac_rslicing_SliceConfig_print_json_table);
}

static inline int mac_rslicing_AddModSliceCommand_print_json_as_root(flatcc_json_printer_t *ctx, const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_json_printer_table_as_root(ctx, buf, bufsiz, fid, mac_rslicing_AddModSliceCommand_print_json_table);
}

static void mac_rslicing_DelSliceCommand_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td)
{
    flatcc_json_printer_table_field(ctx, td, 0, "delSliceConfig", 14, mac_rslicing_DelSliceConfig_print_json_table);
}

static inline int mac_rslicing_DelSliceCommand_print_json_as_root(flatcc_json_printer_t *ctx, const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_json_printer_table_as_root(ctx, buf, bufsiz, fid, mac_rslicing_DelSliceCommand_print_json_table);
}

static void mac_rslicing_UeSliceAssocCommand_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td)
{
    flatcc_json_printer_table_field(ctx, td, 0, "ueSliceConfig", 13, mac_rslicing_UeSliceConfig_print_json_table);
}

static inline int mac_rslicing_UeSliceAssocCommand_print_json_as_root(flatcc_json_printer_t *ctx, const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_json_printer_table_as_root(ctx, buf, bufsiz, fid, mac_rslicing_UeSliceAssocCommand_print_json_table);
}

static void mac_rslicing_ControlMessage_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td)
{
    flatcc_json_printer_union_field(ctx, td, 1, "command", 7, mac_rslicing_ControlCommand_print_json_union_type, mac_rslicing_ControlCommand_print_json_union);
}

static inline int mac_rslicing_ControlMessage_print_json_as_root(flatcc_json_printer_t *ctx, const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_json_printer_table_as_root(ctx, buf, bufsiz, fid, mac_rslicing_ControlMessage_print_json_table);
}

static void mac_rslicing_ControlOutcome_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td)
{
    flatcc_json_printer_string_field(ctx, td, 0, "diagnostic", 10);
}

static inline int mac_rslicing_ControlOutcome_print_json_as_root(flatcc_json_printer_t *ctx, const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_json_printer_table_as_root(ctx, buf, bufsiz, fid, mac_rslicing_ControlOutcome_print_json_table);
}

static void mac_rslicing_CallProcessId_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td)
{
    flatcc_json_printer_uint32_field(ctx, td, 0, "id", 2, 0);
}

static inline int mac_rslicing_CallProcessId_print_json_as_root(flatcc_json_printer_t *ctx, const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_json_printer_table_as_root(ctx, buf, bufsiz, fid, mac_rslicing_CallProcessId_print_json_table);
}

static void mac_rslicing_SupportedAlgorithm_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td)
{
    flatcc_json_printer_uint8_enum_field(ctx, td, 0, "algorithm", 9, 0, mac_rslicing_SliceAlgorithm_print_json_enum);
}

static inline int mac_rslicing_SupportedAlgorithm_print_json_as_root(flatcc_json_printer_t *ctx, const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_json_printer_table_as_root(ctx, buf, bufsiz, fid, mac_rslicing_SupportedAlgorithm_print_json_table);
}

static void mac_rslicing_RanFunctionDefinition_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td)
{
    flatcc_json_printer_table_vector_field(ctx, td, 0, "supportedAlgorithms", 19, mac_rslicing_SupportedAlgorithm_print_json_table);
}

static inline int mac_rslicing_RanFunctionDefinition_print_json_as_root(flatcc_json_printer_t *ctx, const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_json_printer_table_as_root(ctx, buf, bufsiz, fid, mac_rslicing_RanFunctionDefinition_print_json_table);
}

#include "flatcc/flatcc_epilogue.h"
#endif /* RSLICING_JSON_PRINTER_H */
