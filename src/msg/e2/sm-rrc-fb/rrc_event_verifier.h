#ifndef RRC_EVENT_VERIFIER_H
#define RRC_EVENT_VERIFIER_H

/* Generated by flatcc 0.6.1-dev FlatBuffers schema compiler for C by dvide.com */

#ifndef RRC_EVENT_READER_H
#include "rrc_event_reader.h"
#endif
#include "flatcc/flatcc_verifier.h"
#ifndef RRC_COMMON_VERIFIER_H
#include "rrc_common_verifier.h"
#endif
#include "flatcc/flatcc_prologue.h"

static int rrc_event_EventTrigger_verify_table(flatcc_table_verifier_descriptor_t *td);
static int rrc_event_ReportStyle_verify_table(flatcc_table_verifier_descriptor_t *td);
static int rrc_event_ActionDefinition_verify_table(flatcc_table_verifier_descriptor_t *td);
static int rrc_event_IndicationHeader_verify_table(flatcc_table_verifier_descriptor_t *td);
static int rrc_event_LTECapability_verify_table(flatcc_table_verifier_descriptor_t *td);
static int rrc_event_LteExt_verify_table(flatcc_table_verifier_descriptor_t *td);
static int rrc_event_NrExt_verify_table(flatcc_table_verifier_descriptor_t *td);
static int rrc_event_IndicationMessage_verify_table(flatcc_table_verifier_descriptor_t *td);
static int rrc_event_RanFunctionDefinition_verify_table(flatcc_table_verifier_descriptor_t *td);

static int rrc_event_EventTrigger_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_field(td, 0, 1, 1) /* reportOccasion */)) return ret;
    return flatcc_verify_ok;
}

static inline int rrc_event_EventTrigger_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, rrc_event_EventTrigger_identifier, &rrc_event_EventTrigger_verify_table);
}

static inline int rrc_event_EventTrigger_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, rrc_event_EventTrigger_type_identifier, &rrc_event_EventTrigger_verify_table);
}

static inline int rrc_event_EventTrigger_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &rrc_event_EventTrigger_verify_table);
}

static inline int rrc_event_EventTrigger_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &rrc_event_EventTrigger_verify_table);
}

static int rrc_event_ReportStyle_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_field(td, 0, 1, 1) /* type */)) return ret;
    return flatcc_verify_ok;
}

static inline int rrc_event_ReportStyle_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, rrc_event_ReportStyle_identifier, &rrc_event_ReportStyle_verify_table);
}

static inline int rrc_event_ReportStyle_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, rrc_event_ReportStyle_type_identifier, &rrc_event_ReportStyle_verify_table);
}

static inline int rrc_event_ReportStyle_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &rrc_event_ReportStyle_verify_table);
}

static inline int rrc_event_ReportStyle_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &rrc_event_ReportStyle_verify_table);
}

static int rrc_event_ActionDefinition_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_table_field(td, 0, 0, &rrc_event_ReportStyle_verify_table) /* reportStyle */)) return ret;
    return flatcc_verify_ok;
}

static inline int rrc_event_ActionDefinition_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, rrc_event_ActionDefinition_identifier, &rrc_event_ActionDefinition_verify_table);
}

static inline int rrc_event_ActionDefinition_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, rrc_event_ActionDefinition_type_identifier, &rrc_event_ActionDefinition_verify_table);
}

static inline int rrc_event_ActionDefinition_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &rrc_event_ActionDefinition_verify_table);
}

static inline int rrc_event_ActionDefinition_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &rrc_event_ActionDefinition_verify_table);
}

static int rrc_event_IndicationHeader_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_field(td, 0, 2, 2) /* rnti */)) return ret;
    if ((ret = flatcc_verify_field(td, 1, 1, 1) /* event */)) return ret;
    return flatcc_verify_ok;
}

static inline int rrc_event_IndicationHeader_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, rrc_event_IndicationHeader_identifier, &rrc_event_IndicationHeader_verify_table);
}

static inline int rrc_event_IndicationHeader_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, rrc_event_IndicationHeader_type_identifier, &rrc_event_IndicationHeader_verify_table);
}

static inline int rrc_event_IndicationHeader_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &rrc_event_IndicationHeader_verify_table);
}

static inline int rrc_event_IndicationHeader_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &rrc_event_IndicationHeader_verify_table);
}

static int rrc_event_LTECapability_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_field(td, 0, 1, 1) /* dlUeCategory */)) return ret;
    if ((ret = flatcc_verify_field(td, 1, 1, 1) /* ulUeCategory */)) return ret;
    if ((ret = flatcc_verify_field(td, 2, 1, 1) /* enDC */)) return ret;
    return flatcc_verify_ok;
}

static inline int rrc_event_LTECapability_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, rrc_event_LTECapability_identifier, &rrc_event_LTECapability_verify_table);
}

static inline int rrc_event_LTECapability_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, rrc_event_LTECapability_type_identifier, &rrc_event_LTECapability_verify_table);
}

static inline int rrc_event_LTECapability_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &rrc_event_LTECapability_verify_table);
}

static inline int rrc_event_LTECapability_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &rrc_event_LTECapability_verify_table);
}

static int rrc_event_LteExt_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_table_field(td, 0, 0, &rrc_event_LTECapability_verify_table) /* lteCapability */)) return ret;
    return flatcc_verify_ok;
}

static inline int rrc_event_LteExt_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, rrc_event_LteExt_identifier, &rrc_event_LteExt_verify_table);
}

static inline int rrc_event_LteExt_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, rrc_event_LteExt_type_identifier, &rrc_event_LteExt_verify_table);
}

static inline int rrc_event_LteExt_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &rrc_event_LteExt_verify_table);
}

static inline int rrc_event_LteExt_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &rrc_event_LteExt_verify_table);
}

static int rrc_event_NrExt_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_table_vector_field(td, 0, 0, &rrc_common_Snssai_verify_table) /* sNssaiList */)) return ret;
    return flatcc_verify_ok;
}

static inline int rrc_event_NrExt_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, rrc_event_NrExt_identifier, &rrc_event_NrExt_verify_table);
}

static inline int rrc_event_NrExt_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, rrc_event_NrExt_type_identifier, &rrc_event_NrExt_verify_table);
}

static inline int rrc_event_NrExt_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &rrc_event_NrExt_verify_table);
}

static inline int rrc_event_NrExt_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &rrc_event_NrExt_verify_table);
}

static int rrc_event_IndicationMessage_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_field(td, 0, 1, 1) /* rat */)) return ret;
    if ((ret = flatcc_verify_field(td, 1, 1, 1) /* selectedPlmnId */)) return ret;
    if ((ret = flatcc_verify_string_field(td, 2, 0) /* imsi */)) return ret;
    if ((ret = flatcc_verify_vector_field(td, 3, 0, 1, 1, INT64_C(4294967295)) /* ueCapabilityRrcContainer */)) return ret;
    if ((ret = flatcc_verify_table_field(td, 4, 0, &rrc_event_LteExt_verify_table) /* lteExt */)) return ret;
    if ((ret = flatcc_verify_table_field(td, 5, 0, &rrc_event_NrExt_verify_table) /* nrExt */)) return ret;
    return flatcc_verify_ok;
}

static inline int rrc_event_IndicationMessage_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, rrc_event_IndicationMessage_identifier, &rrc_event_IndicationMessage_verify_table);
}

static inline int rrc_event_IndicationMessage_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, rrc_event_IndicationMessage_type_identifier, &rrc_event_IndicationMessage_verify_table);
}

static inline int rrc_event_IndicationMessage_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &rrc_event_IndicationMessage_verify_table);
}

static inline int rrc_event_IndicationMessage_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &rrc_event_IndicationMessage_verify_table);
}

static int rrc_event_RanFunctionDefinition_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_table_vector_field(td, 0, 0, &rrc_event_ReportStyle_verify_table) /* supportedReportStyles */)) return ret;
    return flatcc_verify_ok;
}

static inline int rrc_event_RanFunctionDefinition_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, rrc_event_RanFunctionDefinition_identifier, &rrc_event_RanFunctionDefinition_verify_table);
}

static inline int rrc_event_RanFunctionDefinition_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, rrc_event_RanFunctionDefinition_type_identifier, &rrc_event_RanFunctionDefinition_verify_table);
}

static inline int rrc_event_RanFunctionDefinition_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &rrc_event_RanFunctionDefinition_verify_table);
}

static inline int rrc_event_RanFunctionDefinition_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &rrc_event_RanFunctionDefinition_verify_table);
}

#include "flatcc/flatcc_epilogue.h"
#endif /* RRC_EVENT_VERIFIER_H */
